name: ðŸš€ Deploy

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force the deployment (even if no file changes)'
        required: true
        type: boolean
        default: false
  push:
    branches:
      - main
      - dev

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true

permissions:
  id-token: write
  contents: write

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deployment
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set commit hash for cache busting
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - uses: dorny/paths-filter@v3
        name: Check changes
        id: changes
        with:
          base: ${{ github.ref }}
          list-files: 'shell'
          filters: |
            deployRequired:
              - 'apps/**'
              - 'packages/**'
              - 'example/**'

      - name: "ðŸ”¨ Install dependencies"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        run: bun install --frozen-lockfile

      - name: "ðŸ”¨ Build the SDK"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        run: bun run build:sdk

      - name: "ðŸ‘¥ Configure AWS Credentials"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::262732185023:role/github-action-deploy-role
          aws-region: eu-west-1
          retry-max-attempts: 5

      - name:  "ðŸ‘¥ Login to Amazon ECR"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: "ðŸ”§ Setup environment"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        shell: bash
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "STAGE=prod" >> $GITHUB_ENV
          else
            echo "STAGE=dev" >> $GITHUB_ENV
          fi

          echo "Deployment stage  : ${{ env.STAGE }}"

      - name: "ðŸš€ SST Deploy"
        if: steps.changes.outputs.deployRequired == 'true' || github.event.inputs.force_deploy == 'true'
        run: |
          STAGE=${STAGE_OVERRIDE:-$STAGE}
          echo "Deploying with stage: $STAGE"
          
          bun sst install
          if [[ $STAGE == "prod" ]]; then
            bun sst deploy --stage prod
          else
            bun sst deploy --stage dev
            bun sst deploy --stage example
          fi
        env:
          STAGE: ${{ env.STAGE }}
