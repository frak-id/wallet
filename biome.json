{
    "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
    "files": {
        "includes": [
            "**",
            "!**/_cjs",
            "!**/_esm",
            "!**/_types",
            "!**/dist",
            "!**/build",
            "!**/cdn",
            "!**/node_modules",
            "!**/.sst",
            "!**/.open-next",
            "!**/.next",
            "!**/tsconfig.json",
            "!**/tsconfig.*.json",
            "!**/package.json",
            "!**/sw.js",
            "!**/bundle.js",
            "!**/sst-env.d.ts",
            "!**/.react-router",
            "!**/.rslib",
            "!**/.svelte-kit",
            "!**/*.svelte",
            "!**/playwright-report",
            "!**/test-results"
        ]
    },
    "assist": { "actions": { "source": { "organizeImports": "on" } } },
    "linter": {
        "enabled": true,
        "rules": {
            "recommended": true,
            "complexity": {
                "noExcessiveCognitiveComplexity": {
                    "level": "error",
                    "options": {
                        "maxAllowedComplexity": 16
                    }
                },
                "noUselessTernary": "error",
                "noImportantStyles": "off"
            },
            "correctness": {
                "useHookAtTopLevel": "error",
                "noUnusedVariables": {
                    "level": "error",
                    "options": {
                        "ignoreRestSiblings": true
                    }
                },
                "noUnusedImports": "error",
                "noUndeclaredVariables": "off",
                "noUnusedPrivateClassMembers": "error"
            },
            "style": {
                "useFragmentSyntax": "error",
                "useShorthandAssign": "error",
                "useImportType": "error",
                "useExportType": "error",
                "useConsistentArrayType": {
                    "level": "error",
                    "options": { "syntax": "shorthand" }
                },
                "noDescendingSpecificity": "off"
            },
            "a11y": {
                "noStaticElementInteractions": "off"
            },
            "security": {
                "noDangerouslySetInnerHtml": "off"
            },
            "suspicious": {
                "noDuplicateProperties": "off",
                "noDocumentCookie": "off",
                "noUnknownAtRules": "off"
            },
            "performance": {
                "noImgElement": "off"
            }
        }
    },
    "formatter": {
        "enabled": true,
        "indentStyle": "space",
        "indentWidth": 4,
        "lineEnding": "lf"
    },
    "javascript": {
        "formatter": {
            "quoteStyle": "double",
            "semicolons": "always",
            "trailingCommas": "es5",
            "lineEnding": "lf"
        }
    },
    "css": {
        "parser": {
            "cssModules": true
        },
        "linter": {
            "enabled": true
        },
        "formatter": {
            "enabled": true,
            "indentStyle": "space",
            "indentWidth": 4,
            "lineEnding": "lf"
        }
    }
}
